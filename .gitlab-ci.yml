test-server:
  only:
    - merge_requests
  image: python:3.9.13-slim-buster
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  tags:
    - flight-log
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
  - apt update -y && apt install make -y
  - apt-get update && apt-get -y install libpq-dev gcc
  - make --version
  - python --version
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - make install-back-deps
  - make install-back-test-deps
  - export POSTGRES_USER="searchwing"
  - export POSTGRES_PASSWORD="searchwing"
  - export POSTGRES_DB="searchwing"
  - export POSTGRES_SERVER="localhost"
  - export POSTGRES_PORT="5432"
  script:
  - make lint-server
  - make test-server
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build-dev:
  only:
    - dev
  stage: build
  tags:
    - flight-log
  variables:
    BACKEND_IMAGE_TAG: $CI_REGISTRY_IMAGE/server:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: "/certs"
  environment: staging
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $BACKEND_IMAGE_TAG ./server
    - docker push $BACKEND_IMAGE_TAG

deploy:
  only:
    - main
  stage: deploy
  script: echo "TBD!"
  environment: production
