"""Remove mission-plane 1:1 relation

Revision ID: 91a66a83d358
Revises: 4a681232eabd
Create Date: 2022-07-18 18:08:09.272499

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision = '91a66a83d358'
down_revision = '4a681232eabd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flight',
    sa.Column('flight_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_uri', sa.String(), nullable=True),
    sa.Column('plane_id', sa.Integer(), nullable=True),
    sa.Column('mission_id', sa.Integer(), nullable=True),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('geo', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('pilot', sa.String(), nullable=True),
    sa.Column('observer', sa.String(), nullable=True),
    sa.Column('weather_conditions', sa.Enum('sunny', 'windy', 'cloudy', 'rainy', 'snow', name='weathercondititions_flight'), nullable=True),
    sa.Column('temperature', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['mission_details.mission_id'], ),
    sa.ForeignKeyConstraint(['plane_id'], ['plane_details.plane_id'], ),
    sa.PrimaryKeyConstraint('flight_id')
    )
    op.create_table('misssion_flight_association',
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.flight_id'], ),
    sa.ForeignKeyConstraint(['mission_id'], ['mission_details.mission_id'], ),
    sa.PrimaryKeyConstraint('mission_id', 'flight_id')
    )
    op.drop_table('log_file')
    op.add_column('mission_details', sa.Column('is_test', sa.Boolean(), nullable=True))
    op.alter_column('mission_details', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('idx_mission_details_geo', table_name='mission_details')
    op.drop_column('mission_details', 'pilot')
    op.drop_column('mission_details', 'observer')
    op.drop_column('mission_details', 'temperature')
    op.drop_column('mission_details', 'weather_conditions')
    op.add_column('plane_mission_association', sa.Column('flight_id', sa.Integer(), nullable=False))
    op.drop_constraint('plane_mission_association_mission_id_fkey', 'plane_mission_association', type_='foreignkey')
    op.create_foreign_key(None, 'plane_mission_association', 'flight', ['flight_id'], ['flight_id'])
    op.drop_column('plane_mission_association', 'mission_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plane_mission_association', sa.Column('mission_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'plane_mission_association', type_='foreignkey')
    op.create_foreign_key('plane_mission_association_mission_id_fkey', 'plane_mission_association', 'mission_details', ['mission_id'], ['mission_id'])
    op.drop_column('plane_mission_association', 'flight_id')
    op.add_column('mission_details', sa.Column('weather_conditions', postgresql.ENUM('sunny', 'windy', 'cloudy', 'rainy', 'snow', name='weathercondititions'), autoincrement=False, nullable=True))
    op.add_column('mission_details', sa.Column('temperature', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('mission_details', sa.Column('observer', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('mission_details', sa.Column('pilot', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index('idx_mission_details_geo', 'mission_details', ['geo'], unique=False)
    op.alter_column('mission_details', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('mission_details', 'is_test')
    op.create_table('log_file',
    sa.Column('file_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['mission_details.mission_id'], name='log_file_mission_id_fkey'),
    sa.PrimaryKeyConstraint('file_id', name='log_file_pkey')
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.drop_table('misssion_flight_association')
    op.drop_table('flight')
    # ### end Alembic commands ###
