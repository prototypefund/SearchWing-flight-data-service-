"""Create all tables

Revision ID: 502e63a83221
Revises:
Create Date: 2022-11-30 12:11:51.967178

"""
import geoalchemy2
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "502e63a83221"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mission_details",
        sa.Column("mission_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("mission_alias", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column(
            "geo",
            geoalchemy2.types.Geometry(geometry_type="POINT", from_text="ST_GeomFromEWKT", name="geometry"),
            nullable=True,
        ),
        sa.Column("is_test", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("mission_id"),
        sa.UniqueConstraint("mission_alias"),
    )
    op.create_index(
        op.f("ix_mission_details_mission_id"),
        "mission_details",
        ["mission_id"],
        unique=False,
    )
    op.create_table(
        "plane_details",
        sa.Column("plane_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("plane_alias", sa.String(), nullable=False),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("in_use", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("plane_id"),
        sa.UniqueConstraint("plane_alias"),
    )
    op.create_index(op.f("ix_plane_details_plane_id"), "plane_details", ["plane_id"], unique=False)
    op.create_table(
        "flight",
        sa.Column("flight_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("plane_id", sa.Integer(), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column("average_speed", sa.Float(), nullable=True),
        sa.Column("distance", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column(
            "geo",
            geoalchemy2.types.Geometry(geometry_type="POINT", from_text="ST_GeomFromEWKT", name="geometry"),
            nullable=True,
        ),
        sa.Column("pilot", sa.String(), nullable=True),
        sa.Column("observer", sa.String(), nullable=True),
        sa.Column(
            "weather_conditions",
            sa.Enum("sunny", "windy", "cloudy", "rainy", "snow", name="weathercondititions"),
            nullable=True,
        ),
        sa.Column("temperature", sa.Integer(), nullable=True),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission_details.mission_id"],
        ),
        sa.ForeignKeyConstraint(
            ["plane_id"],
            ["plane_details.plane_id"],
        ),
        sa.PrimaryKeyConstraint("flight_id"),
    )
    op.create_table(
        "apm_parameter_file",
        sa.Column("file_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("file_uri", sa.String(), nullable=False),
        sa.Column("flight_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.flight_id"],
        ),
        sa.PrimaryKeyConstraint("file_id", "file_uri"),
        sa.UniqueConstraint("file_uri"),
    )
    op.create_table(
        "logfile",
        sa.Column("file_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("file_uri", sa.String(), nullable=False),
        sa.Column("flight_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.flight_id"],
        ),
        sa.PrimaryKeyConstraint("file_id", "file_uri"),
        sa.UniqueConstraint("file_uri"),
    )
    op.create_table(
        "misssion_flight_association",
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column("flight_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.flight_id"],
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission_details.mission_id"],
        ),
        sa.PrimaryKeyConstraint("mission_id", "flight_id"),
    )
    op.create_table(
        "plane_mission_association",
        sa.Column("plane_id", sa.Integer(), nullable=False),
        sa.Column("flight_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.flight_id"],
        ),
        sa.ForeignKeyConstraint(
            ["plane_id"],
            ["plane_details.plane_id"],
        ),
        sa.PrimaryKeyConstraint("plane_id", "flight_id"),
    )
    op.create_table(
        "rosbag_file",
        sa.Column("file_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("file_uri", sa.String(), nullable=False),
        sa.Column("flight_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.flight_id"],
        ),
        sa.PrimaryKeyConstraint("file_id", "file_uri"),
        sa.UniqueConstraint("file_uri"),
    )
    op.create_table(
        "telemetry_file",
        sa.Column("file_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("file_uri", sa.String(), nullable=False),
        sa.Column("flight_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.flight_id"],
        ),
        sa.PrimaryKeyConstraint("file_id", "file_uri"),
        sa.UniqueConstraint("file_uri"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("telemetry_file")
    op.drop_table("rosbag_file")
    op.drop_table("plane_mission_association")
    op.drop_table("misssion_flight_association")
    op.drop_table("logfile")
    op.drop_table("apm_parameter_file")
    op.drop_table("flight")
    op.drop_index(op.f("ix_plane_details_plane_id"), table_name="plane_details")
    op.drop_table("plane_details")
    op.drop_index(op.f("ix_mission_details_mission_id"), table_name="mission_details")
    op.drop_table("mission_details")
    # ### end Alembic commands ###
