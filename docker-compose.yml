version: '3.3'

services:
  server:
    container_name: api
    build:
      context: server
      target: dev-api
    stdin_open: true
    tty: true
    command: sh -c "alembic upgrade head && python scripts/fill_up_db.py && python bin/api.py --reload"
    volumes:
      - ./server:/searchwing
      - ./storage:/data/
    ports:
      - '80:80'
    depends_on:
      - db
    environment:
      POSTGRES_USER: searchwing
      POSTGRES_PASSWORD: searchwing
      POSTGRES_DB: searchwing
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
  worker:
    container_name: worker
    build:
      context: server
      target: dev-worker
    stdin_open: true
    tty: true
    command: sh -c "python bin/worker.py"
    volumes:
      - ./server:/searchwing
      - ./storage:/data/
    depends_on:
      - db
      - redis
    environment:
      POSTGRES_USER: searchwing
      POSTGRES_PASSWORD: searchwing
      POSTGRES_DB: searchwing
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis

  frontend:
    container_name: flight-log-viewer-fe
    image: flight-log-viewer-fe-dev
    build:
      context: ./client
    volumes:
      - ./client/nextapp:/app
    depends_on:
      - server
    ports:
      - 3000:3000
    environment:
      NEXT_PUBLIC_API_URL: http://server

  db:
    container_name: db
    platform: linux/x86_64
    image: timescale/timescaledb-ha:pg14.8-ts2.10.3-all-oss
    restart: always
    environment:
      POSTGRES_USER: searchwing
      POSTGRES_PASSWORD: searchwing
      POSTGRES_DB: searchwing
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./server/db:/docker-entrypoint-initdb.d/

  test-db:
    container_name: test-db
    platform: linux/x86_64
    image: timescale/timescaledb-ha:pg14.8-ts2.10.3-all-oss
    restart: always
    environment:
      POSTGRES_USER: searchwing
      POSTGRES_PASSWORD: searchwing
      POSTGRES_DB: searchwing
    ports:
      - '5431:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./server/db:/docker-entrypoint-initdb.d/

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - '5050:80'

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:8.5.16
    restart: always
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel 1.0.1,grafana-simple-json-datasource
    ports:
      - '3000:3000'

  redis:
    container_name: redis
    hostname: redis
    image: redis
    restart: always
    command:  redis-server --save 20 1 --loglevel warning --requirepass searchwing
    ports:
      - '6379:6379'

  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=redis://:searchwing@redis:6379', '--port=5555']
    expose:
      - 5555
    ports:
      - '5555:5555'
    depends_on:
      - redis

volumes:
  storage:
